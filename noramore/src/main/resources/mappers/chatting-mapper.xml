<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chatting">

<resultMap type="ChattingRoom" id="chattingRoom_rm">
      <id property="chattingNo" column="CHATTING_NO" />

      <result property="lastMessage" column="LAST_MESSAGE" />
      <result property="sendTime" column="SEND_TIME" />
      <result property="targetId" column="TARGET_ID" />
      <result property="targetProfile" column="TARGET_PROFILE" />
      <result property="notReadCount" column="NOT_READ_COUNT" />
   </resultMap>

   <resultMap type="Message" id="message_rm">
      <id property="messageNo" column="MESSAGE_NO" />

      <result property="messageContent" column="MESSAGE_CONTENT" />
      <result property="readFlag" column="READ_FL" />
      <result property="senderId" column="SENDER_ID" />
      <result property="chattingNo" column="CHATTING_NO" />
      <result property="sendTime" column="SEND_TIME" />
   </resultMap>

   <resultMap type="Member" id="member_rm">
      <id property="memberID" column="MEMBER_ID"/>
     
      <result property="photoFilename" column="PICTURE_FILE"/>
   </resultMap>   


   <!--=========================================================================================-->

  
   <!-- 채팅방 목록 조회 -->
   <select id="selectRoomList" resultMap="chattingRoom_rm">
      SELECT CHATTING_NO
         ,(SELECT MESSAGE_CONTENT
         	FROM (  SELECT * FROM MESSAGE M2
			            WHERE M2.CHATTING_NO = R.CHATTING_NO
			            ORDER BY MESSAGE_NO DESC) 
          WHERE ROWNUM = 1) LAST_MESSAGE
         ,TO_CHAR(NVL((SELECT MAX(SEND_TIME) SEND_TIME 
               FROM MESSAGE M
               WHERE R.CHATTING_NO  = M.CHATTING_NO), CH_CREATE_DATE), 
               'YYYY.MM.DD') SEND_TIME
         ,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
            WHERE R2.CHATTING_NO = R.CHATTING_NO
            AND R2.OPEN_MEMBER = #{memberID}),
            R.PARTICIPANT,
            R.OPEN_MEMBER
            ) TARGET_ID   
         ,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
            WHERE R2.CHATTING_NO = R.CHATTING_NO
            AND R2.OPEN_MEMBER = #{memberID}),
            (SELECT PICTURE_FILE FROM MEMBER WHERE MEMBER_ID = R.PARTICIPANT),
            (SELECT PICTURE_FILE FROM MEMBER WHERE MEMBER_ID = R.OPEN_MEMBER)
            ) TARGET_PROFILE
         ,(SELECT COUNT(*) FROM MESSAGE M WHERE M.CHATTING_NO = R.CHATTING_NO AND READ_FL = 'N' AND SENDER_ID != #{memberID}) NOT_READ_COUNT
         ,(SELECT MAX(MESSAGE_NO) SEND_TIME FROM MESSAGE M WHERE R.CHATTING_NO  = M.CHATTING_NO) MAX_MESSAGE_NO
      FROM CHATTING_ROOM R
      WHERE OPEN_MEMBER = #{memberID}
      OR PARTICIPANT = #{memberID}
      ORDER BY MAX_MESSAGE_NO DESC NULLS LAST
   </select>

   <!-- 채팅 확인 -->
   <select id="checkChattingNo" resultType="_int">
      SELECT NVL(SUM(CHATTING_NO),0) CHATTING_NO
      FROM CHATTING_ROOM
      WHERE (OPEN_MEMBER = #{loginMemberID} AND PARTICIPANT = #{targetId})
      OR (OPEN_MEMBER = #{targetId} AND PARTICIPANT = #{loginMemberID})
   </select>
   
   <!-- 채팅방 생성 -->
   <insert id="createChattingRoom" parameterType="map" useGeneratedKeys="true">
   
      <selectKey keyProperty="chattingNo" order="BEFORE" resultType="_int">
         SELECT SEQ_ROOM_NO.NEXTVAL FROM DUAL
      </selectKey>
   
      INSERT INTO CHATTING_ROOM
      VALUES(#{chattingNo}, DEFAULT, #{loginMemberID}, #{targetId})
   </insert>
   


   <!-- 채팅 메시지 삽입 -->
   <insert id="insertMessage">
      INSERT INTO "MESSAGE"
      VALUES(SEQ_MESSAGE_NO.NEXTVAL, #{messageContent}, DEFAULT, DEFAULT, #{senderId}, #{chattingNo})
   </insert>
   
   
   <!-- 채팅 메시지 중 내가 보내지 않은 글을 읽음으로 표시 -->
   <update id="updateReadFlag">
      UPDATE "MESSAGE" SET
      READ_FL = 'Y'
      WHERE CHATTING_NO = #{chattingNo}
      AND SENDER_ID != #{memberID}
   </update>

   <!-- 채팅방 메시지 조회 -->
   <select id="selectMessageList" resultMap="message_rm">
      SELECT MESSAGE_NO, MESSAGE_CONTENT, READ_FL, SENDER_ID, CHATTING_NO,
      TO_CHAR(SEND_TIME, 'YYYY.MM.DD HH24:MI') SEND_TIME 
      FROM MESSAGE
      WHERE CHATTING_NO  = #{chattingNo}
      ORDER BY MESSAGE_NO
   </select>

   <!-- 채팅 상대 검색 -->
   <select id="selectTarget" resultMap="member_rm">
	  SELECT MEMBER_ID, EMAIL, PICTURE_FILE  FROM MEMBER
      WHERE MEMBER_ID LIKE '%' || #{query} || '%'
      AND MEMBER_ID != #{memberID}
   </select>
</mapper>