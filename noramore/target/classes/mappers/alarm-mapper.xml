<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="alarm">

	<resultMap type="Alarm" id="resultList">
		<id property="alarmId" column="ALARM_ID"/>
		<result property="alarmKind" column="ALARM_KIND"/>
		<result property="boardId" column="BOARD_ID"/>
		<result property="title" column="TITLE"/>
		<result property="context" column="CONTEXT"/>
		<result property="refCommentId" column="REF_COMMENT_ID"/>
		<result property="receiverId" column="RECEIVER_ID"/>
		<result property="senderId" column="SENDER_ID"/>
		<result property="checkedYN" column="CHECKED_YN"/>
		<result property="registDate" column="REGIST_DATE"/>
	</resultMap>

	<select id="selectListCount" resultType="_int">
		select count(*) from alarm where receiver_id = #{ memberID }
	</select>

	<select id="selectList" parameterType="Alarm" resultMap="resultList">
		select *
		from (select rownum rnum, alarm_id, alarm_kind, board_id, title, context, ref_comment_id, receiver_id, sender_id, checked_yn, regist_date
				from (select alarm_id, alarm_kind, b.board_id, title, c.context, ref_comment_id, receiver_id, sender_id, checked_yn, a.regist_date
                        from alarm a
                        join comm_free c on (c.comment_id = a.native_id)
                        join free_board b on (c.board_id = b.board_id)
                        where alarm_kind = 'COMM_FREE'
                        or alarm_kind = 'FREE_BOARD'
                        and receiver_id = #{ receiverId }
						union
                        select alarm_id, alarm_kind, b.board_id, title, c.context, ref_comment_id, receiver_id, sender_id, checked_yn, a.regist_date
                        from alarm a
                        join comm_recr c on (c.comment_id = a.native_id)
                        join recr_board b on (c.board_id = b.board_id)
                        where alarm_kind = 'COMM_RECR'
                        or alarm_kind = 'RECR_BOARD'
                        and receiver_id = #{ receiverId }
						union
						select alarm_id, alarm_kind, b.board_id, NULL as title, NULL as context, NULL as ref_comment_id, receiver_id, sender_id, checked_yn, a.regist_date
						from alarm a
						join recr_appl ap on (board_id = native_id)
						join recr_board b on (ap.board_id = b.board_id)
						where alarm_kind = 'RECR_APPL'
						and receiver_id = #{ receiverId }
						order by checked_YN desc, regist_date desc))
		where rnum between #{ startRow } and #{ endRow }
	</select>

	<select id="selectNewCount" parameterType="string" resultType="_int">
		select count(*) from alarm
		where receiver_id = #{ memberID }
		and checked_YN = 'N'
	</select>
	
	
	<insert id="insertCommAlarm" parameterType="Alarm">
		insert into alarm
		values ( select max(alarm_id) + 1 from alarm,  #{ alarmKind }, #{ nativeId },
				(select member_id
				from #{ alarmKind }
				where board_id = #{ boardId }
				and member_id != #{ senderId } ), 
				#{ senderId }, 'N', sysdate)
	</insert>

	<insert id="insertCommRefAlarm" parameterType="Alarm">
			insert into alarm
			values ( select max(alarm_id) + 1 from alarm,  #{ alarmKind }, #{ nativeId },
				(select member_id
				from #{ alarmKind }
				where comment_id = #{ refCommentId }
				and member_id != #{ senderId } ), 
				#{ senderId }, 'N', sysdate)
	</insert>
	
	<insert id="insertApplAlarm" parameterType="Alarm">
		insert into alarm
		values ( select max(alarm_id) + 1 from alarm,  #{ alarmKind }, #{ nativeId },
				(select member_id
				from #{ alarmKind }
				where board_id = #{ nativeId }), 
				#{ senderId }, 'N', sysdate)
	</insert>

	<update id="updateAlarm" parameterType="string">
		update alarm
		set check_YN = #{ checkedYN }
		where alarm_id = #{ alarmId }
	</update>
</mapper>
